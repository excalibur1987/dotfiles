#!/usr/bin/env bash

basedir=$(echo ${PWD##*/})

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-e] [-p] [-j] <worktree>

Script the creation of a new worktree.

Available options:

-h, --help                    Print this help and exit
-v, --env-path                Path for template of .env path
-p, --python                  Configure python environment using poetry
-j, --js                      Configure node environment using pnpm

EOF
  exit
}


msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}
parse_params() {
  # default values of variables set from params
  create_upstream=1
  # prefix="$(git config github.user)/"
  branch=''
  python_env=0
  js_env=0
  env_path=''

  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --env-path)
      env_path="$2"
      shift
      ;;
    -j | --js)
      js_env=1
      shift
      ;;
    -p | --python)
      python_env=1
      shift
      ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")

  if [[ -z "$branch" ]]; then
    branch="${args[0]}"
  fi

  return 0
}
parse_params "$@"

if [[ -n "$env_path"  ]]; then
  eval "cp ${env_path} ${branch}/.env"
fi

cd $branch

if [[ $js_env -eq 1 ]]; then
    eval "pnpm install --shamefully-hoist"
fi

if [[ $python_env -eq 1 ]]; then
    eval "poetry install"
    echo "source $(pwd)/.env" >> $(echo $(poetry env info -p)"/bin/activate")
fi
