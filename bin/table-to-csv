#!/bin/bash

# Initialize variables
SERVER=""
DATABASE=""
TABLENAME=""
DATE_COLUMN=""
FROM_DATE=""
TO_DATE=""
DB_USER=""
DB_PWD=""
OUTPUT_DIR="."
DELIMITER=","

# Parse command line arguments
while getopts "s:b:t:d:f:u:U:P:o:D:" opt; do
  case $opt in
    s) SERVER="$OPTARG" ;;
    b) DATABASE="$OPTARG" ;;
    t) TABLENAME="$OPTARG" ;;
    d) DATE_COLUMN="$OPTARG" ;;
    f) FROM_DATE="$OPTARG" ;;
    u) TO_DATE="$OPTARG" ;;
    U) DB_USER="$OPTARG" ;;
    P) DB_PWD="$OPTARG" ;;
    o) OUTPUT_DIR="$OPTARG" ;;
    D) DELIMITER="$OPTARG" ;;
    \?) echo "Invalid option: -$OPTARG" >&2; exit 1 ;;
  esac
done

# Validate required arguments
if [ -z "$SERVER" ] || [ -z "$DATABASE" ] || [ -z "$TABLENAME" ] || [ -z "$DATE_COLUMN" ] || [ -z "$FROM_DATE" ] || [ -z "$TO_DATE" ] || [ -z "$DB_USER" ] || [ -z "$DB_PWD" ]; then
    echo "Usage: $0 -s SERVER -b DATABASE -t TABLE_NAME -d DATE_COLUMN -f FROM_DATE -u TO_DATE -U DB_USER -P DB_PWD [-o OUTPUT_DIR] [-D DELIMITER]"
    echo "Example: $0 -s localhost -b MyDb -t MyTable -d CreateDate -f 2024-01-01 -u 2024-12-31 -U myuser -P mypassword -o /path/to/output -D '|'"
    exit 1
fi

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Base filename without directory
BASE_FILE="export.$TABLENAME.$FROM_DATE.$TO_DATE"
# Full path for output file
OUTPUT_FILE="$OUTPUT_DIR/$BASE_FILE"

# Get column headers
sqlcmd -S $SERVER -d $DATABASE -U $DB_USER -P $DB_PWD -Q "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '$TABLENAME' ORDER BY ORDINAL_POSITION" -h -1 | sed 's/[[:space:]]*$//' | sed '/^[[:alpha:]]/!d' > "$OUTPUT_FILE.tmp"

# First transform each column name with CAST, then concatenate
PREFIX="CAST("
SUFFIX=" AS NVARCHAR(MAX)) AS "
columns=()
while IFS= read -r column; do
    columns+=("$PREFIX$column$SUFFIX$column")
done < "$OUTPUT_FILE.tmp"
(IFS=,; echo "${columns[*]}") > "$OUTPUT_FILE.header.sql"


# Original column names concatenated with pipe for the header
paste -d"$DELIMITER" -s "$OUTPUT_FILE.tmp" >"$OUTPUT_FILE.header.csv"

rm "$OUTPUT_FILE.tmp"

# Create the full SQL query in a temp file
echo "SELECT $(head -n 1 "$OUTPUT_FILE.header.sql") FROM $TABLENAME WHERE $DATE_COLUMN >= '$FROM_DATE' AND $DATE_COLUMN <= '$TO_DATE'" > "$OUTPUT_DIR/query.$BASE_FILE.sql"

rm "$OUTPUT_FILE.header.sql"

# Export data using the query file
bcp "$(cat "$OUTPUT_DIR/query.$BASE_FILE.sql")" \
queryout "$OUTPUT_FILE.data.csv" -S $SERVER -d $DATABASE -U $DB_USER -P $DB_PWD \
-c -t "$DELIMITER" -r "\n" -w -e "$OUTPUT_FILE.error"

# Cleanup temp files
rm "$OUTPUT_DIR/query.$BASE_FILE.sql"

head -n 1 "$OUTPUT_FILE.header.csv" > "$OUTPUT_FILE.csv"
# Combine headers and data
tail -n +2 "$OUTPUT_FILE.data.csv" >> "$OUTPUT_FILE.csv"
rm "$OUTPUT_FILE.data.csv" "$OUTPUT_FILE.header.csv"

echo "Export completed to $OUTPUT_FILE.csv"
